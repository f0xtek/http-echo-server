# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
    # specify the primary image
    - image: circleci/golang:1.9

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true

    # use a primary image that already has Docker (recommended)
    # or install it during a build like we do here
#    - run:
#        name: Install Docker client
#        command: |
#          set -x
#          VER="17.03.0-ce"
#          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
#          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
#          mv -f /tmp/docker/* /usr/bin

    # specify any bash command here prefixed with `run: `
    - run:
        name: Build image
        command: |
          TAG=$(git rev-parse --short HEAD)
          docker build -t landerson61/http-echo:$TAG .
          docker tag landerson61/http-echo:$TAG landerson61/http-echo:$CIRCLE_TAG
    - run:
        name: Push image
        command: |
          TAG=$(git rev-parse --short HEAD)
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push landerson61/http-echo:$TAG
          docker push landerson61/http-echo:$CIRCLE_TAG
workflows:
  version: 2
  tagged-build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/